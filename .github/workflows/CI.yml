name: CI
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        group:
          - Core
        version:
          - '1'
          - '1.6'
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
      - uses: julia-actions/cache@v1
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
        with:
          file: lcov.info
      # The standard setup of Coveralls is just annoying for parallel builds, see, e.g.,
      # https://github.com/trixi-framework/Trixi.jl/issues/691
      # https://github.com/coverallsapp/github-action/issues/47
      # https://github.com/coverallsapp/github-action/issues/67
      # This standard setup is reproduced below for completeness.
      # - uses: coverallsapp/github-action@master
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     flag-name: run-${{ matrix.version }}-${{ github.run_id }}
      #     parallel: true
      #     path-to-lcov: ./lcov.info
      # Instead, we use a more tedious approach:
      # - Store all individual coverage files as artifacts (directly below)
      # - Download and merge individual coverage reports in another step
      # - Upload only the merged coverage report to Coveralls
      - shell: bash
        run: |
          cp ./lcov.info ./lcov-${{ matrix.version }}-${{ github.run_id }}.info
      - uses: actions/upload-artifact@v2
        with:
          name: lcov-${{ matrix.version }}-${{ github.run_id }}
          path: ./lcov-${{ matrix.version }}-${{ github.run_id }}.info

  finish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      # The standard setup of Coveralls is just annoying for parallel builds, see, e.g.,
      # https://github.com/trixi-framework/Trixi.jl/issues/691
      # https://github.com/coverallsapp/github-action/issues/47
      # https://github.com/coverallsapp/github-action/issues/67
      # This standard setup is reproduced below for completeness.
      # - name: Coveralls Finished
      #   uses: coverallsapp/github-action@master
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     parallel-finished: true
      # Instead, we use the more tedious approach described above.
      # At first, we check out the repository and download all artifacts
      # (and list files for debugging).
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
      - run: ls -R
      # Next, we merge the individual coverage files and upload
      # the combined results to Coveralls.
      - name: Merge lcov files using Coverage.jl
        shell: julia --color=yes {0}
        run: |
          using Pkg
          Pkg.activate(temp=true)
          Pkg.add("Coverage")
          using Coverage
          coverage = LCOV.readfolder(".")
          for cov in coverage
            cov.filename = replace(cov.filename, "\\" => "/")
          end
          coverage = merge_coverage_counts(coverage)
          @show covered_lines, total_lines = get_summary(coverage)
          LCOV.writefile("./lcov.info", coverage)
      - uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./lcov.info
      # Upload merged coverage data as artifact for debugging
      - uses: actions/upload-artifact@v2
        with:
          name: lcov
          path: ./lcov.info
      # That's it
      - run: echo "Finished testing Unrolled.jl"
